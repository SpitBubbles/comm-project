# 1.变量和类型
#     - 整型：Python中可以处理任意大小的整数（Python 2.x中有int和long两种类型整数，在Python 3.x中整数只有int一种）。支持二进制（如0b100）、八进制（如0o100）、十进制（100）和十六进制（0x100）的表示法。
#     - 浮点型：浮点数也就是小数。
#     - 字符串型：字符串是以单引号或双引号括起来的任意文本，比如'hello'和"hello",字符串还有原始字符串表示法、字节字符串表示法、Unicode字符串表示法，而且可以书写成多行的形式（用三个单引号或三个双引号开头，三个单引号或三个双引号结尾）。
#     - 布尔型：布尔值只有True、False两种值，要么是True，要么是False，在Python中，可以直接用True、False表示布尔值（请注意大小写），也可以通过布尔运算计算出来（例如3 < 5会产生布尔值True，而2 == 1会产生布尔值False）。
#     - 复数型：形如3+5j，跟数学上的复数表示一样，唯一不同的是虚部的i换成了j。

# 2.变量命名
#     硬性规则：
#         - 变量名由字母（广义的Unicode字符，不包括特殊字符）、数字和下划线构成，数字不能开头。
#         - 大小写敏感（大写的a和小写的A是两个不同的变量）。
#         - 不要跟关键字（有特殊含义的单词，后面会讲到）和系统保留字（如函数、模块等的名字）冲突。
#     PEP 8要求：
#         - 用小写字母拼写，多个单词用下划线连接。
#         - 受保护的实例属性用单个下划线开头（后面会讲到）。
#         - 私有的实例属性用两个下划线开头（后面会讲到）。

# 3 变量的使用
a = 321
b = 12
print(a + b)    # 333
print(a - b)    # 309
print(a * b)    # 3852
print(a / b)    # 26.75
# 3.1 在Python中可以使用type函数对变量的类型进行检查。
a = 100
b = 12.345
c = 1 + 5j
d = 'hello, world'
e = True
print(type(a))    # <class 'int'>
print(type(b))    # <class 'float'>
print(type(c))    # <class 'complex'>
print(type(d))    # <class 'str'>
print(type(e))    # <class 'bool'>
# 3.2 可以使用Python中内置的函数对变量类型进行转换。
#     - `int()`：将一个数值或字符串转换成整数，可以指定进制。
#     - `float()`：将一个字符串转换成浮点数。
#     - `str()`：将指定的对象转换成字符串形式，可以指定编码。
#     - `chr()`：将整数转换成该编码对应的字符串（一个字符）。
#     - `ord()`：将字符串（一个字符）转换成对应的编码（整数）。
a = int(input('a = '))
b = int(input('b = '))
print('%d + %d = %d' % (a, b, a + b))
print('%d - %d = %d' % (a, b, a - b))
print('%d * %d = %d' % (a, b, a * b))
print('%d / %d = %f' % (a, b, a / b))
print('%d // %d = %d' % (a, b, a // b))
print('%d %% %d = %d' % (a, b, a % b))
print('%d ** %d = %d' % (a, b, a ** b))

# 4.运算符：Python支持多种运算符，下表大致按照优先级从高到低的顺序列出了所有的运算符，运算符的优先级指的是多个运算符同时出现时，先做什么运算然后再做什么运算。
# | `[]` `[:]`                                                             | 下标，切片
# | `**`                                                                   | 指数
# | `~` `+` `-`                                                            | 按位取反, 正负号
# | `*` `/` `%` `//`                                                       | 乘，除，模，整除
# | `+` `-`                                                                | 加，减
# | `>>` `<<`                                                              | 右移，左移
# | `&`                                                                    | 按位与
# | `^` `\|`                                                               | 按位异或，按位或
# | `<=` `<` `>` `>=`                                                      | 小于等于，小于，大于，大于等于
# | `==` `!=`                                                              | 等于，不等于
# | `is`  `is not`                                                         | 身份运算符
# | `in` `not in`                                                          | 成员运算符
# | `not` `or` `and`                                                       | 逻辑运算符
# | `=` `+=` `-=` `*=` `/=` `%=` `//=` `**=` `&=` `|=` `^=` `>>=` `<<=`    | （复合）赋值运算符

# 4.1 赋值运算符
a = 10
b = 3
a += b        # 相当于：a = a + b / a=13
a *= a + 2    # 相当于：a = a * (a + 2) / a=195
print(a)      # 195
# 4.2 比较运算符和逻辑运算符
flag0 = 1 == 1
flag1 = 3 > 2
flag2 = 2 < 1
flag3 = flag1 and flag2
flag4 = flag1 or flag2
flag5 = not (1 != 2)
print('flag0 =', flag0)    # flag0 = True
print('flag1 =', flag1)    # flag1 = True
print('flag2 =', flag2)    # flag2 = False
print('flag3 =', flag3)    # flag3 = False
print('flag4 =', flag4)    # flag4 = True
print('flag5 =', flag5)    # flag5 = False

# 5. 练习
# 5.1 华氏温度转换为摄氏温度。
f = float(input('请输入华氏温度: '))
c = (f - 32) / 1.8
print('%.1f华氏度 = %.1f摄氏度' % (f, c)) # 81.6华氏度 = 27.8摄氏度
# 说明：
#     在使用`print`函数输出时，也可以对字符串内容进行格式化处理，上面`print`函数中的字符串`%.1f`是一个占位符，稍后会由一个`float`类型的变量值替换掉它。
#     同理，如果字符串中有`%d`，后面可以用一个`int`类型的变量值替换掉它，而`%s`会被字符串的值替换掉。
#     除了这种格式化字符串的方式外，还可以用下面的方式来格式化字符串，其中`{f:.1f}`和`{c:.1f}`可以先看成是`{f}`和`{c}`，表示输出时会用变量`f`和变量`c`的值替换掉这两个占位符，后面的`:.1f`表示这是一个浮点数，小数点后保留1位有效数字。

# 5.2 输入圆的半径计算计算周长和面积。
radius = float(input('请输入圆的半径: ')) # 请输入圆的半径: 2.5
perimeter = 2 * 3.1416 * radius
area = 3.1416 * radius * radius
print('周长: %.2f' % perimeter) # 周长: 15.70
print('面积: %.2f' % area) # 面积: 19.62

# 5.3 输入年份判断是不是闰年。
year = int(input('请输入年份: '))
# 如果代码太长写成一行不便于阅读 可以使用\对代码进行折行
# is_leap = year % 4 == 0 and year % 100 != 0 or year % 400 == 0
is_leap = year % 4 == 0 and year % 100 != 0 or \
          year % 400 == 0
print(is_leap)
# 说明：比较运算符会产生布尔值，而逻辑运算符 and 和 or 会对这些布尔值进行组合，最终也是得到一个布尔值，闰年输出 True，平年输出 False。